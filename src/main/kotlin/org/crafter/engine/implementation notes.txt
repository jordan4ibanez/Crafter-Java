        MeshStorage.newMesh(
            "test",
                new float[]{
                        0.0f,  0.5f, 0.0f,
                        -0.5f, -0.5f, 0.0f,
                        0.5f, -0.5f, 0.0f
                },
                new float[] {
                        0.0f, 0.0f,
                        0.0f, 1.0f,
                        1.0f, 1.0f
                },
                new int[] {
                        0,1,2
                },
                null,
                null,
                "textures/debug.png",
                false
        );









        //
        //            // Now we're moving into OpenGL shader implementation
        //
        //            // 3d
        //
        //            ShaderStorage.start("3d");
        //
        //            Camera.updateCameraMatrix();
        //
        //            Camera.setObjectMatrix(
        //                    new Vector3f(0.0f,0,-3),
        //                    new Vector3f(0, (float)Math.toRadians(rotation), 0),
        //                    new Vector3f(1)
        //            );
        //
        //            MeshStorage.render("test");
        //
        //            // 2d
        //
        //            Window.clearDepthBuffer();
        //
        //            ShaderStorage.start("2d");
        //
        //            Camera.updateGuiCameraMatrix();
        //
        //
        //            Font.enableShadows();
        //            String text = "hello\nthere";
        //
        //            Vector2f textCenterOnWindow = Window.getWindowCenter().sub(Font.getTextCenter(42.0f, text));
        //
        //            Camera.setGuiObjectMatrix(0,0);
        //
        //
        //            Font.setShadowOffset(0.5f, 0.5f);
        //            Font.switchColor(1f,1f,1f);
        //            Font.switchShadowColor(0,0,0);
        //
        //            Font.drawText(textCenterOnWindow.x, textCenterOnWindow.y, 42.0f, text);



        // How the chunk mesh worker did the thing

                // Fixme: get rid of this super verbose test - it's a square - but FOV will make it look rectangular

                // vertex points

        //        // top left
        //        positions.add(-0.5f); // x
        //        positions.add( 0.5f); // y
        //        positions.add( 0.0f); // z
        //        // bottom left
        //        positions.add(-0.5f); // x
        //        positions.add(-0.5f); // y
        //        positions.add( 0.0f); // z
        //        // bottom right
        //        positions.add( 0.5f); // x
        //        positions.add(-0.5f); // y
        //        positions.add( 0.0f); // z
        //        // top right
        //        positions.add( 0.5f); // x
        //        positions.add( 0.5f); // y
        //        positions.add( 0.0f); // z
        //
        //
        //        // texture coordinates
        //
        //        // top left of image
        //        textureCoordinates.add(0.0f); // x
        //        textureCoordinates.add(0.0f); // y
        //        // bottom left of image
        //        textureCoordinates.add(0.0f); // x
        //        textureCoordinates.add(1.0f); // y
        //        // bottom right of image
        //        textureCoordinates.add(1.0f); // x
        //        textureCoordinates.add(1.0f); // y
        //        // top right of image
        //        textureCoordinates.add(1.0f); // x
        //        textureCoordinates.add(0.0f); // y
        //
        //        // indices
        //
        //        // Tri 1
        //        indices.add(0);
        //        indices.add(1);
        //        indices.add(2);
        //
        //        // Tri 2
        //        indices.add(2);
        //        indices.add(3);
        //        indices.add(0);

                // FIXME: end verbose mess here

                Testtest